LETTER = _{ 'A'..'Z' | 'a'..'z' }
LEADING_DOT = { "." }
DECIMAL_DIGIT = { '0'..'9' }
NONZERO_DECIMAL_DIGIT = { '1'..'9' }
ZERO = { "0" }
ONE =  { "1" }
OCTAL_DIGIT = { '0'..'7' }
HEX_DIGIT = { DECIMAL_DIGIT | 'A'..'F' | 'a'..'f' }

IDENT = ${ LETTER ~ (LETTER | DECIMAL_DIGIT | "_")* }
FULL_IDENT = ${ IDENT ~ ("." ~ IDENT)* }
BRACED_FULL_IDENT = { "(" ~ LEADING_DOT? ~ FULL_IDENT ~ ")"  }

NEGATIVE = { "-" }
POSITIVE = { "+" }
DECIMAL_LIT = { NEGATIVE? ~ (NONZERO_DECIMAL_DIGIT) ~ DECIMAL_DIGIT* } 
OCTAL_LIT = { NEGATIVE? ~ "0" ~ OCTAL_DIGIT* }
HEX_LIT = { NEGATIVE? ~ ("x" | "X") ~ HEX_DIGIT ~ HEX_DIGIT? }
INT_LIT = { DECIMAL_LIT | OCTAL_LIT | HEX_LIT }
SIGNED_INT_LIT = { (POSITIVE | NEGATIVE)? ~ INT_LIT } 

EXPONENT = _{ ("e" | "E") ~ (POSITIVE | NEGATIVE)? ~ DECIMAL_DIGIT+ }
FLOAT_LIT_OLD = { "inf" | "nan" | (NEGATIVE? ~ DECIMAL_DIGIT+ ~ ("." ~ DECIMAL_DIGIT*)? ~ EXPONENT?)  }
FLOAT_LIT = { "inf" | "nan" | (DECIMAL_DIGIT+ ~ "." ~ DECIMAL_DIGIT* ~ EXPONENT?) | (DECIMAL_DIGIT+ ~ EXPONENT) | ("." ~ DECIMAL_DIGIT+ ~ EXPONENT?)  }

SIGNED_FLOAT_LIT = { (POSITIVE | NEGATIVE)? ~ FLOAT_LIT }

BOOL_LIT = { "true" | "false" }

UNICODE_LONG_ESCAPE = ${ "\\" ~ "U" ~ (ZERO{3} ~ HEX_DIGIT{5} | ZERO{2} ~ ONE ~ ZERO ~ HEX_DIGIT{4}) }
UNICODE_ESCAPE = ${ "\\" ~ "u" ~ HEX_DIGIT ~ HEX_DIGIT ~ HEX_DIGIT ~ HEX_DIGIT}
CHAR_ESCAPE = ${ "\\" ~ ("a" | "b" | "f" | "n" | "r" | "t" | "v" | "\\" | "'" | "\"" ) }
OCT_ESCAPE = ${ "\\" ~ OCTAL_DIGIT ~ (OCTAL_DIGIT){0,2} }
HEX_ESCAPE = ${ "\\" ~ ("x" | "X") ~ HEX_DIGIT ~ HEX_DIGIT? }
CHAR_VALUE = { UNICODE_LONG_ESCAPE | UNICODE_ESCAPE | CHAR_ESCAPE | OCT_ESCAPE | HEX_ESCAPE  }
CHAR_OTHER = @{ !("\"" | "'") ~ ANY }

STRING_LIT_INNER = { UNICODE_LONG_ESCAPE | UNICODE_ESCAPE | CHAR_ESCAPE | OCT_ESCAPE | HEX_ESCAPE | CHAR_OTHER }
STRING_LIT_CONTENT = ${ STRING_LIT_INNER* } 
STRING_LIT = ${ ("'" ~ STRING_LIT_CONTENT ~ "'") | ("\"" ~ STRING_LIT_CONTENT ~ "\"")}

CONSTANT = { FULL_IDENT | SIGNED_FLOAT_LIT | SIGNED_INT_LIT |  STRING_LIT | BOOL_LIT  }

